{"version":3,"sources":["webpack:///webpack/bootstrap 00aab3203e8fa7ecaf24","webpack:///./scripts/calculator.js","webpack:///./scripts/app.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA,mDAA2C,cAAc;;AAEzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AChEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8B;AACA;AACA;AACA;AACA,iD;AACA;AACA;AACA,iD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB;AACvB,4BAA4B;AAC5B,4BAA4B;AAC5B,0BAA0B;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AC5EA;;AAEA;AACA","file":"./public/bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// identity function for calling harmony imports with the correct context\n \t__webpack_require__.i = function(value) { return value; };\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 1);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 00aab3203e8fa7ecaf24","const calculator = (function () {\n  \n  const getOps = function(buttonValue) {\n  // takes an empty array and an operation\n  // returns object containing operands, operator, and calculated result\n    const ops = {\n      operands: [],\n      operator: \"\",\n      calculated: \"\"\n    }\n    if (buttonValue === \"C\") { \n      ops.operands = [];\n      ops.operator = \"\";\n    }\n    else if (typeof (buttonValue) === \"number\") { \n      ops.operands.push(parseInt(buttonValue)) \n    }\n    else if (typeof (buttonValue === \"number\")) { \n      ops.operator = buttonValue;\n    }\n    else if (buttonValue === \"=\") {\n      ops.calculated = calculate(ops.operands, ops.operator)\n    }\n    return ops \n  }\n\n  const calculate = function(ops) {\n  // takes object containing an array of numbers and an operation\n  // returns a number that is the result of calling the operation on the array's numbers \n    function add(arr) { arr[0] + arr[1] }\n    function subtract(arr) { arr[0] - arr[1] }\n    function multiply(arr) { arr[0] * arr[1] }\n    function divide(arr) { arr[0] / arr[1] }\n    const operators = {\n      \"+\": add,\n      \"-\": subtract,\n      \"ร\": multiply,\n      \"รท\": divide,\n    }\n    return operators[ops.operator](ops.operand)\n  }\n\n  const getClickValue = function(nodelist) {\n  // takes a nodeList\n  // creates an event listener for each node in the list\n  // returns the value collected by clicking on one of those nodes\n    for (let button of nodelist) {\n      button.addEventListener(\"click\", function () {\n        return button.value\n      })\n    }\n  }\n\n  const printToScreen = function(buttonValue) {\n  // takes a button value\n  // adds the button value to the screen node\n    screen.textContent += button.value\n  }\n\n  //const buttonlist = document.querySelectorAll(\"input[type='button']\");\n  //const screen = document.querySelector(\"#screen\")\n\n  //const buttonValue = getClickValue(buttonlist)\n  //const ops = getOps(buttonValue)\n  //const calculated = calculate(ops)\n  //const\n  const log = function() {\n    return console.log(\"build worked\")\n  }\n\n  return {\n    log: log,\n    getOps: getOps\n  }\n})()\n\nmodule.exports = calculator\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/calculator.js\n// module id = 0\n// module chunks = 0","const calculator = require(\"./calculator.js\")\n\ncalculator.log()\nconsole.log(calculator.getOps(3))\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./scripts/app.js\n// module id = 1\n// module chunks = 0"],"sourceRoot":""}